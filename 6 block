import cv2
from skimage.feature import local_binary_pattern
from skimage.measure import shannon_entropy
import matplotlib.pyplot as plt
import numpy as np

# Read the image
image = cv2.imread('saad.jpg', cv2.IMREAD_GRAYSCALE)

# Choose a random 5x5 sub-image
np.random.seed(42)
start_row = np.random.randint(0, image.shape[0] - 5)
start_col = np.random.randint(0, image.shape[1] - 5)
sub_image = image[start_row:start_row + 5, start_col:start_col + 5]

# Compute Local Binary Pattern (LBP) for the sub-image
lbp = local_binary_pattern(sub_image, P=8, R=1, method='uniform')

# Compute Shannon Entropy for the sub-image
entropy = shannon_entropy(sub_image)

# Display the original, LBP, and entropy images
plt.subplot(1, 3, 1)
plt.imshow(sub_image, cmap='gray')
plt.title('Original 5x5 Sub-Image')
plt.axis('off')

plt.subplot(1, 3, 2)
plt.imshow(lbp, cmap='gray')
plt.title('Local Binary Pattern (LBP)')
plt.axis('off')

# Display Shannon Entropy as a single pixel on a dummy image
dummy_image = np.zeros_like(sub_image)
dummy_image[0, 0] = entropy

plt.subplot(1, 3, 3)
plt.imshow(dummy_image, cmap='viridis')
plt.title('Shannon Entropy')
plt.axis('off')

plt.show()
